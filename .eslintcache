[{"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\index.js":"1","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\reportWebVitals.js":"2","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\App.js":"3","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\navbar.js":"4","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\cardRepo.js":"5","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\pages\\Main.js":"6","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\services\\repositories.js":"7","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\services\\api.js":"8","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\utils\\utils.js":"9","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\addRepository.js":"10","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\modalConfirmDelete.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":112,"mtime":1607327801607,"results":"15","hashOfConfig":"13"},{"size":6246,"mtime":1607338889766,"results":"16","hashOfConfig":"13"},{"size":5252,"mtime":1607340795900,"results":"17","hashOfConfig":"13"},{"size":1817,"mtime":1607342279701,"results":"18","hashOfConfig":"13"},{"size":704,"mtime":1607340454014,"results":"19","hashOfConfig":"13"},{"size":106,"mtime":1607328460053,"results":"20","hashOfConfig":"13"},{"size":682,"mtime":1607338167835,"results":"21","hashOfConfig":"13"},{"size":2367,"mtime":1607339118207,"results":"22","hashOfConfig":"13"},{"size":1392,"mtime":1607340863520,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1wuhumc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\index.js",[],["51","52"],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\reportWebVitals.js",[],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\App.js",[],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\navbar.js",["53","54","55","56","57","58","59"],"import \"@clayui/css/lib/css/atlas.css\";\r\nimport ClayDropDown from '@clayui/drop-down';\r\nimport { useState } from 'react';\r\nimport { ClayInput } from '@clayui/form';\r\nimport AddRepository from './addRepository';\r\nimport ClayManagementToolbar from '@clayui/management-toolbar';\r\nimport ClayButton from '@clayui/button';\r\n\r\nexport default function Navbar({ onSearch, onAdd }) {\r\n    const [menuListTypeActive, setMenuListTypeActive] = useState(false);\r\n    const [menuOrderActive, setMenuOrderActive] = useState(false);\r\n    const [menuAddActive, setMenuAddActive] = useState(false);\r\n\r\n    function handleSearch(event) {\r\n        onSearch(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <nav className=\"application-bar application-bar-light bg-white navbar navbar-expand-md\">\r\n            <div className=\"container-fluid container-fluid-max-xl\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item mr-3\">\r\n                        <img src=\"https://img.icons8.com/fluent-systems-regular/24/000000/github.png\" />\r\n                    </li>\r\n                    <li className=\"nav-item mr-3\">\r\n                        <div className=\"navbar-title navbar-text-truncate\">Github Compares</div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <ClayDropDown\r\n                            trigger={<button className=\"btn\">Filter and order</button>}\r\n                            active={menuOrderActive}\r\n                            onActiveChange={setMenuOrderActive}\r\n                        >\r\n                            <ClayDropDown.ItemList>\r\n                                <ClayDropDown.Item>\r\n                                    Cards\r\n                                </ClayDropDown.Item>\r\n                                <ClayDropDown.Item>\r\n                                    List\r\n                                </ClayDropDown.Item>\r\n                            </ClayDropDown.ItemList>\r\n                        </ClayDropDown>\r\n                    </li>\r\n\r\n                </ul>\r\n                <ul className=\"navbar-nav full-width mx-2\">\r\n                    <li className=\"nav-item full-width\">\r\n                        <ClayManagementToolbar.Search>\r\n                            <ClayInput.Group>\r\n                                <ClayInput.GroupItem>\r\n                                    <ClayInput\r\n                                        aria-label=\"Search\"\r\n                                        className=\"form-control input-group-inset input-group-inset-after\"\r\n                                        defaultValue=\"Red\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                    <ClayInput.GroupInsetItem after tag=\"span\">\r\n                                        <ClayButton\r\n                                            displayType=\"unstyled\"\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            <img src=\"https://img.icons8.com/fluent-systems-regular/24/666666/search.png\" />\r\n                                        </ClayButton>\r\n                                    </ClayInput.GroupInsetItem>\r\n                                </ClayInput.GroupItem>\r\n                            </ClayInput.Group>\r\n                        </ClayManagementToolbar.Search>\r\n                    </li>\r\n                </ul>\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <button className=\"btn btn-unstyled nav-btn nav-btn-monospaced mx-2\" type=\"button\">\r\n                            <img src=\"https://img.icons8.com/fluent-systems-filled/24/000000/contrast--v1.png\" />\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <button className=\"btn btn-unstyled nav-btn nav-btn-monospaced mx-2\" type=\"button\">\r\n                            <img src=\"https://img.icons8.com/fluent-systems-filled/24/000000/star.png\" />\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"dropdown nav-item\">\r\n                        <ClayDropDown\r\n                            trigger={<button className=\"btn btn-unstyled nav-btn nav-btn-monospaced mx-2\">\r\n                                <img src=\"https://img.icons8.com/fluent-systems-filled/24/000000/brick-wall.png\" />\r\n                            </button>}\r\n                            active={menuListTypeActive}\r\n                            onActiveChange={setMenuListTypeActive}\r\n                        >\r\n                            <ClayDropDown.ItemList>\r\n                                <ClayDropDown.Item>\r\n                                    Cards\r\n                                </ClayDropDown.Item>\r\n                                <ClayDropDown.Item>\r\n                                    List\r\n                                </ClayDropDown.Item>\r\n                            </ClayDropDown.ItemList>\r\n                        </ClayDropDown>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <ClayDropDown\r\n                            trigger={\r\n                                <button className=\"btn btn-primary btn-monospaced ml-3\" type=\"button\">\r\n                                    <img src=\"https://img.icons8.com/fluent-systems-regular/24/ffffff/plus-math.png\" />\r\n                                </button>\r\n                            }\r\n                            active={menuAddActive}\r\n                            onActiveChange={setMenuAddActive}\r\n                            className=\"modal-add-repository-dropdown\"\r\n                        >\r\n                            <AddRepository\r\n                                onCancel={setMenuAddActive}\r\n                                onAdd={() => {\r\n                                    onAdd();\r\n                                    setMenuAddActive(false);\r\n                                }} />\r\n                        </ClayDropDown>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\cardRepo.js",["60","61","62","63"],"import \"@clayui/css/lib/css/atlas.css\";\r\nimport ClayCard from '@clayui/card';\r\nimport ClayLabel from '@clayui/label';\r\nimport { isStarred, markAsStar, unmarkAsStar } from '../utils/utils';\r\nimport { destroy } from '../services/repositories';\r\nimport ModalConfirmDelete from './modalConfirmDelete';\r\nimport { useState } from 'react';\r\n\r\nconst spritemap = \"https://cdn.jsdelivr.net/npm/@clayui/css/lib/images/icons/icons.svg\";\r\n\r\nexport default function CardRepo({ repository, onHandleStar, onDelete }) {\r\n\r\n    const [showModalConfirmDelete, setShowModalConfirmDelete] = useState(false);\r\n\r\n    function handleStar() {\r\n        isStarred(repository.id) ? unmarkAsStar(repository.id) : markAsStar(repository.id);\r\n        onHandleStar();\r\n    }\r\n\r\n    function handleDelete() {\r\n        destroy(repository);\r\n        onDelete();\r\n    }\r\n\r\n    if (!repository) return null;\r\n\r\n    return (\r\n        <>\r\n            <ClayCard displayType=\"file\">\r\n                <ClayCard.Body>\r\n                    <ClayCard.Row className=\"align-items-center justify-content-between \">\r\n                        <ClayCard.Description displayType=\"title\" >\r\n                            <img className=\"avatar\" src={repository.owner.avatar_url} />\r\n                            {repository.full_name}\r\n                        </ClayCard.Description>\r\n                        <div className=\"row\">\r\n                            <button className=\"btn btn-unstyled nav-btn nav-btn-monospaced\" type=\"button\" onClick={handleStar}>\r\n                                <img src={`https://img.icons8.com/fluent-systems-${isStarred(repository.id) ? 'filled' : 'regular'}/24/000000/star.png`} />\r\n                            </button>\r\n                            <button className=\"btn btn-unstyled nav-btn nav-btn-monospaced\" type=\"button\" onClick={() => setShowModalConfirmDelete(true)}>\r\n                                <img src=\"https://img.icons8.com/fluent-systems-regular/24/000000/delete.png\" />\r\n                            </button>\r\n                        </div>\r\n                    </ClayCard.Row>\r\n                    <ClayCard.Row>\r\n                        <div className=\"autofit-col autofit-col-expand\">\r\n                            <section className=\"autofit-section\">\r\n                                <ClayCard.Row className=\"align-items-center\">\r\n                                    <ClayCard.Description displayType=\"title\" className=\"mr-2\">Stars</ClayCard.Description>\r\n                                    <ClayCard.Description displayType=\"text\">{repository.stargazers_count}</ClayCard.Description>\r\n                                </ClayCard.Row>\r\n                                <ClayCard.Row className=\"align-items-center\">\r\n                                    <ClayCard.Description displayType=\"title\" className=\"mr-2\">Forks</ClayCard.Description>\r\n                                    <ClayCard.Description displayType=\"text\">{repository.forks_count}</ClayCard.Description>\r\n                                </ClayCard.Row>\r\n                                <ClayCard.Row className=\"align-items-center\">\r\n                                    <ClayCard.Description displayType=\"title\" className=\"mr-2\">Open Issues</ClayCard.Description>\r\n                                    <ClayCard.Description displayType=\"text\">{repository.open_issues_count}</ClayCard.Description>\r\n                                </ClayCard.Row>\r\n                                <ClayCard.Row className=\"align-items-center\">\r\n                                    <ClayCard.Description displayType=\"title\" className=\"mr-2\">Age</ClayCard.Description>\r\n                                    <ClayCard.Description displayType=\"text\">{repository.created_at}</ClayCard.Description>\r\n                                </ClayCard.Row>\r\n                                <ClayCard.Row className=\"align-items-center\">\r\n                                    <ClayCard.Description displayType=\"title\" className=\"mr-2\">Last Commit</ClayCard.Description>\r\n                                    <ClayCard.Description displayType=\"text\">100</ClayCard.Description>\r\n                                </ClayCard.Row>\r\n                                <ClayCard.Row className=\"align-items-center\">\r\n                                    <ClayCard.Description displayType=\"title\" className=\"mr-2\">License</ClayCard.Description>\r\n                                    <ClayCard.Description displayType=\"text\">{repository.license && repository.license.name}</ClayCard.Description>\r\n                                </ClayCard.Row>\r\n                                <ClayCard.Caption>\r\n                                    <ClayLabel displayType=\"warning\">{repository.language}</ClayLabel>\r\n                                </ClayCard.Caption>\r\n                            </section>\r\n                        </div>\r\n                    </ClayCard.Row>\r\n                </ClayCard.Body>\r\n            </ClayCard>\r\n\r\n            {\r\n                showModalConfirmDelete && (\r\n                    <ModalConfirmDelete\r\n                        repository={repository}\r\n                        onCancel={setShowModalConfirmDelete}\r\n                        onConfirm={handleDelete} />\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\pages\\Main.js",["64","65","66","67","68","69"],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\services\\repositories.js",["70"],"import { api } from './api';\r\n\r\nexport async function getRepository(path) {\r\n    const response = await api.get(`/repos/${path}`);\r\n    return response;\r\n}\r\n\r\nexport function index() {\r\n    const data = window.localStorage.getItem('repositories');\r\n    return data ? JSON.parse(data) : [];\r\n}\r\n\r\nexport function store(repository) {\r\n    let data = index();\r\n    data.unshift(repository);\r\n    window.localStorage.setItem('repositories', JSON.stringify(data));\r\n}\r\n\r\nexport function destroy(repository) {\r\n    let data = index();\r\n    const _index = data.findIndex(_repo => _repo.id == repository.id);\r\n    data.splice(_index, 1);\r\n    window.localStorage.setItem('repositories', JSON.stringify(data));\r\n}","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\services\\api.js",[],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\utils\\utils.js",[],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\addRepository.js",[],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\modalConfirmDelete.js",["71"],"import \"@clayui/css/lib/css/atlas.css\";\r\nimport ClayModal, { useModal } from '@clayui/modal';\r\nimport ClayButton from '@clayui/button';\r\nimport { useState } from 'react';\r\n\r\nexport default function ModalConfirmDelete({ repository, onConfirm, onCancel }) {\r\n    const { observer, onClose } = useModal({\r\n        onClose: () => {onCancel() }\r\n    });\r\n\r\n    function handleConfirm() {\r\n        onConfirm();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ClayModal\r\n                observer={observer}\r\n                size=\"sm\"\r\n                status=\"info\"\r\n                center={true}\r\n                className=\"modal-warning\"\r\n            >\r\n                <ClayModal.Header>Delete repository</ClayModal.Header>\r\n                <ClayModal.Body>\r\n                    <p>Are you sure to delete the <strong>{repository.full_name}</strong> repository?</p>\r\n                </ClayModal.Body>\r\n                <ClayModal.Footer\r\n                    last={\r\n                        <ClayButton.Group spaced>\r\n                            <ClayButton onClick={onClose} displayType=\"secondary\">Cancel</ClayButton>\r\n                            <ClayButton onClick={handleConfirm} displayType=\"secondary\" className=\"text-white bg-warning\">Delete</ClayButton>\r\n                        </ClayButton.Group>\r\n                    }\r\n                />\r\n            </ClayModal>\r\n        </>\r\n    )\r\n}",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":14,"column":14,"nodeType":"78","messageId":"79","endLine":14,"endColumn":26},{"ruleId":"80","severity":1,"message":"81","line":23,"column":25,"nodeType":"82","endLine":23,"endColumn":105},{"ruleId":"80","severity":1,"message":"81","line":62,"column":45,"nodeType":"82","endLine":62,"endColumn":125},{"ruleId":"80","severity":1,"message":"81","line":73,"column":29,"nodeType":"82","endLine":73,"endColumn":114},{"ruleId":"80","severity":1,"message":"81","line":78,"column":29,"nodeType":"82","endLine":78,"endColumn":106},{"ruleId":"80","severity":1,"message":"81","line":84,"column":33,"nodeType":"82","endLine":84,"endColumn":116},{"ruleId":"80","severity":1,"message":"81","line":103,"column":37,"nodeType":"82","endLine":103,"endColumn":120},{"ruleId":"76","severity":1,"message":"83","line":9,"column":7,"nodeType":"78","messageId":"79","endLine":9,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":33,"column":29,"nodeType":"82","endLine":33,"endColumn":89},{"ruleId":"80","severity":1,"message":"81","line":38,"column":33,"nodeType":"82","endLine":38,"endColumn":156},{"ruleId":"80","severity":1,"message":"81","line":41,"column":33,"nodeType":"82","endLine":41,"endColumn":113},{"ruleId":"76","severity":1,"message":"84","line":11,"column":12,"nodeType":"78","messageId":"79","endLine":11,"endColumn":18},{"ruleId":"76","severity":1,"message":"85","line":11,"column":20,"nodeType":"78","messageId":"79","endLine":11,"endColumn":29},{"ruleId":"76","severity":1,"message":"86","line":12,"column":12,"nodeType":"78","messageId":"79","endLine":12,"endColumn":16},{"ruleId":"76","severity":1,"message":"87","line":12,"column":18,"nodeType":"78","messageId":"79","endLine":12,"endColumn":25},{"ruleId":"76","severity":1,"message":"88","line":13,"column":12,"nodeType":"78","messageId":"79","endLine":13,"endColumn":24},{"ruleId":"76","severity":1,"message":"89","line":13,"column":26,"nodeType":"78","messageId":"79","endLine":13,"endColumn":41},{"ruleId":"90","severity":1,"message":"91","line":21,"column":53,"nodeType":"92","messageId":"93","endLine":21,"endColumn":55},{"ruleId":"76","severity":1,"message":"94","line":4,"column":10,"nodeType":"78","messageId":"79","endLine":4,"endColumn":18},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'handleSearch' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'spritemap' is assigned a value but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'sort' is assigned a value but never used.","'setSort' is assigned a value but never used.","'showModalAdd' is assigned a value but never used.","'setShowModalAdd' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]