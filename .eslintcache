[{"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\index.js":"1","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\reportWebVitals.js":"2","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\App.js":"3","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\navbar.js":"4","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\pages\\Main.js":"5","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\services\\repositories.js":"6","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\services\\api.js":"7","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\utils\\utils.js":"8","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\addRepository.js":"9","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\modalConfirmDelete.js":"10","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\cardRepository.js":"11","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\Navbar.js":"12","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\CardRepository.js":"13","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\ModalConfirmDelete.js":"14","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\AddRepository.js":"15","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\services\\favorites.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":303,"mtime":1607349697302,"results":"20","hashOfConfig":"18"},{"size":8148,"mtime":1607357483395,"results":"21","hashOfConfig":"18"},{"size":3412,"mtime":1607437507093,"results":"22","hashOfConfig":"18"},{"size":888,"mtime":1607437515460,"results":"23","hashOfConfig":"18"},{"size":106,"mtime":1607328460053,"results":"24","hashOfConfig":"18"},{"size":257,"mtime":1607437467922,"results":"25","hashOfConfig":"18"},{"size":3500,"mtime":1607356763578,"results":"26","hashOfConfig":"18"},{"size":1357,"mtime":1607355997517,"results":"27","hashOfConfig":"18"},{"size":10185,"mtime":1607355962105,"results":"28","hashOfConfig":"18"},{"size":8138,"mtime":1607437490426,"results":"29","hashOfConfig":"18"},{"size":10535,"mtime":1607438169407,"results":"30","hashOfConfig":"18"},{"size":1357,"mtime":1607355997517,"results":"31","hashOfConfig":"18"},{"size":3886,"mtime":1607438104660,"results":"32","hashOfConfig":"18"},{"size":710,"mtime":1607436087436,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1wuhumc",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\index.js",[],["69","70"],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\reportWebVitals.js",[],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\App.js",[],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\navbar.js",["71","72"],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\pages\\Main.js",["73"],"import '../App.css';\r\nimport \"@clayui/css/lib/css/atlas.css\";\r\nimport Navbar from '../components/Navbar';\r\nimport CardRepo from '../components/CardRepository';\r\nimport { useEffect, useState } from 'react';\r\nimport { index } from '../services/repositories';\r\nimport ClayEmptyState from '@clayui/empty-state';\r\nimport { isFavorite } from '../services/favorites';\r\nimport ClayButton from '@clayui/button';\r\n\r\nexport default function Main() {\r\n    const [repositories, setRepositories] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [sort, setSort] = useState('');\r\n    const [filterByFavorite, setFilterByFavorite] = useState(false);\r\n    const [listMode, setListMode] = useState('grid');\r\n\r\n    useEffect(() => {\r\n        getRepositories();\r\n    }, [search, filterByFavorite, sort]);\r\n\r\n    function getRepositories() {\r\n        let data = index();\r\n        if (filterByFavorite) {\r\n            data = data.filter(_repository => isFavorite(_repository.id));\r\n        }\r\n        if (search) {\r\n            const term = search.toLowerCase();\r\n            data = data.filter(_repository => _repository.full_name && _repository.full_name.toLowerCase().includes(term));\r\n        }\r\n        if (sort) {\r\n            data = data.sort((a, b) => a[sort] < b[sort] ? 1 : -1);\r\n        }\r\n        setRepositories(data);\r\n    }\r\n\r\n    function handleSearch(value) {\r\n        setSearch(value);\r\n    }\r\n\r\n    async function handleFilterByFavorite(value) {\r\n        setFilterByFavorite(value);\r\n    }\r\n\r\n    function handleClearFilter() {\r\n        setSearch('');\r\n        setSort('');\r\n    }\r\n\r\n    function handleSort(value) {\r\n        setSort(value);\r\n    }\r\n\r\n    function handleListMode(mode) {\r\n        setListMode(mode);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar\r\n                search={search}\r\n                setSearch={setSearch}\r\n                onSearch={handleSearch}\r\n                onAdd={getRepositories}\r\n                onSort={handleSort}\r\n                onListModeChange={handleListMode}\r\n                onFilterByFavorite={handleFilterByFavorite} />\r\n\r\n            <div className=\"container full-width pt-3\">\r\n                <div className=\"row\">\r\n                    {repositories.map(_repository => (\r\n                        <div key={_repository.id} className={listMode === 'list' ? 'col-12' : 'col-md-4'}>\r\n                            <CardRepo\r\n                                key={_repository.id}\r\n                                type={listMode}\r\n                                repository={_repository}\r\n                                onHandleStar={getRepositories}\r\n                                onDelete={getRepositories} />\r\n                        </div>\r\n                    ))}\r\n                    {repositories.length < 1 && (\r\n                        <ClayEmptyState\r\n                            description=\"Add some repositories by clicking add new repository\"\r\n                            imgSrc=\"/empty.svg\"\r\n                            title=\"There is still nothing here\"\r\n                        >\r\n                            {\r\n                                (sort || search) && <ClayButton displayType=\"secondary\" onClick={handleClearFilter}>Clear Filter</ClayButton>\r\n                            }\r\n                        </ClayEmptyState>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\services\\repositories.js",[],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\services\\api.js",[],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\utils\\utils.js",[],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\addRepository.js",["74"],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\modalConfirmDelete.js",["75"],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\cardRepository.js",["76","77","78"],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\Navbar.js",["79"],"import \"@clayui/css/lib/css/atlas.css\";\r\nimport ClayDropDown from '@clayui/drop-down';\r\nimport { useState } from 'react';\r\nimport { ClayInput } from '@clayui/form';\r\nimport AddRepository from './AddRepository';\r\nimport ClayManagementToolbar from '@clayui/management-toolbar';\r\nimport ClayButton from '@clayui/button';\r\nimport ClayIcon from '@clayui/icon';\r\n\r\nexport default function Navbar({ search, setSearch, onAdd, onFilterByFavorite, onSort, onListModeChange }) {\r\n    const [menuListModeActive, setMenuListModeActive] = useState(false);\r\n    const [menuSortActive, setMenuSortActive] = useState(false);\r\n    const [menuAddActive, setMenuAddActive] = useState(false);\r\n    const [filterByFavorite, setFilterByFavorite] = useState(false);\r\n    const [listMode, setListMode] = useState('grid');\r\n\r\n    function handleSearch(event) {\r\n        setSearch(event.target.value);\r\n    }\r\n\r\n    function handleFilterByFavorite() {\r\n        const value = !filterByFavorite;\r\n        setFilterByFavorite(value);\r\n        onFilterByFavorite(value);\r\n    }\r\n\r\n    function handleSort(menuOption) {\r\n        onSort(menuOption.param);\r\n        setMenuSortActive(false);\r\n    }\r\n\r\n    function handleListMode(mode) {\r\n        setListMode(mode);\r\n        onListModeChange(mode);\r\n        setMenuListModeActive(false);\r\n    }\r\n\r\n    return (\r\n        <nav className=\"application-bar application-bar-light bg-white navbar navbar-expand-md\">\r\n            <div className=\"container-fluid container-fluid-max-xl\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item mr-3\">\r\n                        <img src=\"https://img.icons8.com/fluent-systems-filled/24/000000/github.png\" />\r\n                    </li>\r\n                    <li className=\"nav-item mr-3\">\r\n                        <div className=\"navbar-title navbar-text-truncate\">Github Compare</div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <ClayDropDown\r\n                            trigger={<button className=\"btn\">\r\n                                Filter and order\r\n                                <ClayIcon symbol=\"caret-bottom\" className=\"ml-2\" />\r\n                            </button>}\r\n                            active={menuSortActive}\r\n                            onActiveChange={setMenuSortActive}\r\n                        >\r\n                            <ClayDropDown.Group header=\"Order\">\r\n                                <ClayDropDown.ItemList>\r\n                                    {\r\n                                        [\r\n                                            { param: 'stargazers_count', title: 'Stars' },\r\n                                            { param: 'forks_count', title: 'Forks' },\r\n                                            { param: 'open_issues_count', title: 'Open Issues' },\r\n                                            { param: 'created_at', title: 'Age' },\r\n                                            { param: 'last_commit_date', title: 'Last commit' }\r\n                                        ].map(_menuOption => (\r\n                                            <ClayDropDown.Item key={_menuOption.param} onClick={() => handleSort(_menuOption)}>\r\n                                                {_menuOption.title}\r\n                                            </ClayDropDown.Item>\r\n                                        ))\r\n                                    }\r\n                                </ClayDropDown.ItemList>\r\n                            </ClayDropDown.Group>\r\n                        </ClayDropDown>\r\n                    </li>\r\n\r\n                </ul>\r\n                <ul className=\"navbar-nav full-width mx-2\">\r\n                    <li className=\"nav-item full-width\">\r\n                        <ClayManagementToolbar.Search>\r\n                            <ClayInput.Group>\r\n                                <ClayInput.GroupItem>\r\n                                    <ClayInput\r\n                                        aria-label=\"Search\"\r\n                                        className=\"form-control input-group-inset input-group-inset-after\"\r\n                                        type=\"text\"\r\n                                        defaultValue={search}\r\n                                        value={search}\r\n                                        onChange={handleSearch}\r\n                                        id=\"searchInput\"\r\n                                        placeholder=\"Search\"\r\n                                    />\r\n                                    <ClayInput.GroupInsetItem after tag=\"span\">\r\n                                        <ClayButton\r\n                                            displayType=\"unstyled\"\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            <ClayIcon symbol=\"search\" />\r\n                                        </ClayButton>\r\n                                    </ClayInput.GroupInsetItem>\r\n                                </ClayInput.GroupItem>\r\n                            </ClayInput.Group>\r\n                        </ClayManagementToolbar.Search>\r\n                    </li>\r\n                </ul>\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <button className=\"btn btn-unstyled nav-btn nav-btn-monospaced mx-2\" type=\"button\">\r\n                            <ClayIcon symbol=\"adjust\" />\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <button className=\"btn btn-unstyled nav-btn nav-btn-monospaced mx-2\" type=\"button\" onClick={handleFilterByFavorite}>\r\n                            <ClayIcon symbol={filterByFavorite ? 'star' : 'star-o'} />\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"dropdown nav-item\">\r\n                        <ClayDropDown\r\n                            trigger={<button className=\"btn btn-unstyled nav-btn nav-btn-monospaced mx-2\">\r\n                                <ClayIcon symbol={listMode === 'grid' ? 'cards2' : 'cards-full'} />\r\n                            </button>}\r\n                            active={menuListModeActive}\r\n                            onActiveChange={setMenuListModeActive}\r\n                        >\r\n                            <ClayDropDown.ItemList>\r\n                                <ClayDropDown.Item onClick={() => handleListMode('grid')}>\r\n                                    <ClayIcon symbol=\"cards2\" className=\"mr-2\" />\r\n                                    Cards\r\n                                </ClayDropDown.Item>\r\n                                <ClayDropDown.Item onClick={() => handleListMode('list')}>\r\n                                    <ClayIcon symbol=\"cards-full\" className=\"mr-2\" />\r\n                                    List\r\n                                </ClayDropDown.Item>\r\n                            </ClayDropDown.ItemList>\r\n                        </ClayDropDown>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <ClayDropDown\r\n                            trigger={\r\n                                <button className=\"btn btn-primary btn-monospaced ml-3\" type=\"button\">\r\n                                    <ClayIcon symbol=\"plus\" />\r\n                                </button>\r\n                            }\r\n                            active={menuAddActive}\r\n                            onActiveChange={setMenuAddActive}\r\n                            className=\"modal-add-repository-dropdown\"\r\n                        >\r\n                            <AddRepository\r\n                                onCancel={setMenuAddActive}\r\n                                onAdd={() => {\r\n                                    onAdd();\r\n                                    setMenuAddActive(false);\r\n                                }} />\r\n                        </ClayDropDown>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\CardRepository.js",["80","81"],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\ModalConfirmDelete.js",[],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\components\\AddRepository.js",[],"C:\\Users\\Pichau\\Documents\\projetos\\liferay-app\\src\\services\\favorites.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":49,"column":25,"nodeType":"88","endLine":49,"endColumn":104},{"ruleId":"89","severity":1,"message":"90","line":125,"column":60,"nodeType":"91","messageId":"92","endLine":125,"endColumn":62},{"ruleId":"93","severity":1,"message":"94","line":20,"column":8,"nodeType":"95","endLine":20,"endColumn":40,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":17},{"ruleId":"97","severity":1,"message":"101","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":18},{"ruleId":"86","severity":1,"message":"87","line":32,"column":29,"nodeType":"88","endLine":32,"endColumn":89},{"ruleId":"86","severity":1,"message":"87","line":89,"column":29,"nodeType":"88","endLine":89,"endColumn":89},{"ruleId":"89","severity":1,"message":"90","line":155,"column":19,"nodeType":"91","messageId":"92","endLine":155,"endColumn":21},{"ruleId":"86","severity":1,"message":"87","line":43,"column":25,"nodeType":"88","endLine":43,"endColumn":104},{"ruleId":"86","severity":1,"message":"87","line":33,"column":29,"nodeType":"88","endLine":33,"endColumn":89},{"ruleId":"86","severity":1,"message":"87","line":94,"column":29,"nodeType":"88","endLine":94,"endColumn":89},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRepositories'. Either include it or remove the dependency array.","ArrayExpression",["104"],"no-unused-vars","'ClayAlert' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [search, filterByFavorite, sort, getRepositories]",{"range":"107","text":"108"},[774,806],"[search, filterByFavorite, sort, getRepositories]"]